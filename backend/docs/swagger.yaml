basePath: /api/v1
consumes:
- application/json
definitions:
  admin.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  admin.LoginResult:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/db.Admin'
    type: object
  admin.UserListInput:
    properties:
      email:
        type: string
      enable:
        type: boolean
      firstname:
        type: string
      lastname:
        type: string
      limit:
        example: 20
        type: integer
      page:
        example: 0
        type: integer
      sorter:
        $ref: '#/definitions/structs.Sorter'
    type: object
  admin.UserPasswordInput:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  admin.UserStatusInput:
    properties:
      enable:
        type: boolean
    type: object
  customer.AccountCreateInput:
    properties:
      avatar:
        type: string
      currency_id:
        type: integer
      initial_balance:
        type: number
      name:
        type: string
      type_id:
        type: integer
    required:
    - currency_id
    - name
    - type_id
    type: object
  customer.AccountListInput:
    properties:
      currency_id:
        type: integer
      enable:
        type: boolean
      limit:
        example: 20
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      page:
        example: 0
        type: integer
      sorter:
        $ref: '#/definitions/structs.Sorter'
      type_id:
        type: integer
    type: object
  customer.AccountTypeCreateInput:
    properties:
      avatar:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  customer.AccountTypeListInput:
    properties:
      limit:
        example: 20
        type: integer
      name:
        type: string
      page:
        example: 0
        type: integer
      sorter:
        $ref: '#/definitions/structs.Sorter'
    type: object
  customer.AccountTypeUpdateInput:
    properties:
      avatar:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  customer.AccountUpdateInput:
    properties:
      avatar:
        type: string
      currency_id:
        type: integer
      enable:
        type: boolean
      initial_balance:
        type: number
      name:
        type: string
      type_id:
        type: integer
    required:
    - currency_id
    - name
    - type_id
    type: object
  customer.CategoryCreateInput:
    properties:
      avatar:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - name
    - type
    type: object
  customer.CategoryListInput:
    properties:
      is_fee:
        type: boolean
      limit:
        example: 20
        type: integer
      name:
        type: string
      page:
        example: 0
        type: integer
      sorter:
        $ref: '#/definitions/structs.Sorter'
      type:
        type: string
    type: object
  customer.CategoryUpdateInput:
    properties:
      avatar:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - name
    - type
    type: object
  customer.CurrencyCreateInput:
    properties:
      name:
        type: string
      short:
        type: string
      symbol:
        type: string
    required:
    - name
    - short
    - symbol
    type: object
  customer.CurrencyListInput:
    properties:
      limit:
        example: 20
        type: integer
      name:
        type: string
      page:
        example: 0
        type: integer
      short:
        type: string
      sorter:
        $ref: '#/definitions/structs.Sorter'
      symbol:
        type: string
    type: object
  customer.CurrencyUpdateInput:
    properties:
      name:
        type: string
      short:
        type: string
      symbol:
        type: string
    required:
    - name
    - short
    - symbol
    type: object
  customer.FilePresignedInput:
    properties:
      extension:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - extension
    - name
    - type
    type: object
  customer.FilePresignedResponse:
    properties:
      host:
        type: string
      path:
        type: string
      query:
        type: string
    type: object
  customer.FileWorkspacePresignedInput:
    properties:
      extension:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - extension
    - name
    - type
    type: object
  customer.FileWorkspacePresignedResponse:
    properties:
      host:
        type: string
      path:
        type: string
      query:
        type: string
    type: object
  customer.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  customer.LoginResult:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/db.User'
    type: object
  customer.PlaceCreateInput:
    properties:
      avatar:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  customer.PlaceListInput:
    properties:
      description:
        type: string
      limit:
        example: 20
        type: integer
      name:
        type: string
      page:
        example: 0
        type: integer
      sorter:
        $ref: '#/definitions/structs.Sorter'
    type: object
  customer.PlaceUpdateInput:
    properties:
      avatar:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  customer.ResetInput:
    properties:
      code:
        type: string
      password:
        type: string
    required:
    - code
    - password
    type: object
  customer.SignupInput:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
    required:
    - email
    - firstname
    - lastname
    - password
    type: object
  customer.SignupResult:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/db.User'
    type: object
  customer.TransactionCreateInput:
    properties:
      account_id:
        type: integer
      amount:
        type: number
      category_id:
        type: integer
      date:
        type: string
      description:
        type: string
      fee:
        type: number
      fee_category_id:
        type: integer
      has_fee:
        type: boolean
      place_id:
        type: integer
      target_account_id:
        type: integer
      type:
        type: string
    required:
    - account_id
    - amount
    - date
    - description
    - type
    type: object
  customer.TransactionListInput:
    properties:
      account_id:
        type: integer
      category_id:
        type: integer
      date:
        type: string
      description:
        type: string
      limit:
        example: 20
        type: integer
      page:
        example: 0
        type: integer
      place_id:
        type: integer
      sorter:
        $ref: '#/definitions/structs.Sorter'
      type:
        type: string
    type: object
  customer.TransactionListRecord:
    properties:
      date:
        type: string
      total:
        type: number
      transactions:
        items:
          $ref: '#/definitions/db.Transaction'
        type: array
    type: object
  customer.TransactionUpdateInput:
    properties:
      account_id:
        type: integer
      amount:
        type: number
      category_id:
        type: integer
      date:
        type: string
      description:
        type: string
      place_id:
        type: integer
      type:
        type: string
    required:
    - account_id
    - amount
    - category_id
    - date
    - description
    - type
    type: object
  customer.UpdatePasswordParamInput:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  customer.UpdateProfileInput:
    properties:
      avatar:
        type: string
      firstname:
        type: string
      lastname:
        type: string
    required:
    - avatar
    - firstname
    - lastname
    type: object
  customer.WorkspaceCreateInput:
    properties:
      avatar:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  customer.WorkspaceListInput:
    properties:
      description:
        type: string
      limit:
        example: 20
        type: integer
      name:
        type: string
      page:
        example: 0
        type: integer
      sorter:
        $ref: '#/definitions/structs.Sorter'
    type: object
  customer.WorkspaceRoleInput:
    properties:
      admin:
        type: boolean
    type: object
  customer.WorkspaceUpdateInput:
    properties:
      avatar:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  db.Account:
    properties:
      avatar:
        type: string
      balance:
        type: number
      created_at:
        type: string
      currency:
        $ref: '#/definitions/db.Currency'
      currency_id:
        type: integer
      enable:
        type: boolean
      expense_balance:
        type: number
      id:
        type: integer
      income_balance:
        type: number
      initial_balance:
        type: number
      name:
        type: string
      owner:
        $ref: '#/definitions/db.User'
      owner_id:
        type: integer
      transactions:
        items:
          $ref: '#/definitions/db.Transaction'
        type: array
      type:
        $ref: '#/definitions/db.AccountType'
      type_id:
        type: integer
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/db.Workspace'
      workspace_id:
        type: integer
    type: object
  db.AccountType:
    properties:
      accounts:
        items:
          $ref: '#/definitions/db.Account'
        type: array
      avatar:
        type: string
      created_at:
        type: string
      id:
        type: integer
      meta:
        $ref: '#/definitions/db.Meta'
      name:
        type: string
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/db.Workspace'
      workspace_id:
        type: integer
    type: object
  db.Admin:
    properties:
      created_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  db.Category:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_fee:
        type: boolean
      meta:
        $ref: '#/definitions/db.Meta'
      name:
        type: string
      transactions:
        items:
          $ref: '#/definitions/db.Transaction'
        type: array
      type:
        type: string
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/db.Workspace'
      workspace_id:
        type: integer
    type: object
  db.Currency:
    properties:
      accounts:
        items:
          $ref: '#/definitions/db.Account'
        type: array
      created_at:
        type: string
      id:
        type: integer
      meta:
        $ref: '#/definitions/db.Meta'
      name:
        type: string
      short:
        type: string
      symbol:
        type: string
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/db.Workspace'
      workspace_id:
        type: integer
    type: object
  db.Meta:
    properties:
      creator:
        $ref: '#/definitions/db.User'
      creator_id:
        type: integer
      updater:
        $ref: '#/definitions/db.User'
      updater_id:
        type: integer
    type: object
  db.Place:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      meta:
        $ref: '#/definitions/db.Meta'
      name:
        type: string
      transactions:
        items:
          $ref: '#/definitions/db.Transaction'
        type: array
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/db.Workspace'
      workspace_id:
        type: integer
    type: object
  db.Transaction:
    properties:
      account:
        $ref: '#/definitions/db.Account'
      account_id:
        type: integer
      amount:
        type: number
      category:
        $ref: '#/definitions/db.Category'
      category_id:
        type: integer
      created_at:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      meta:
        $ref: '#/definitions/db.Meta'
      place:
        $ref: '#/definitions/db.Place'
      place_id:
        type: integer
      type:
        type: string
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/db.Workspace'
      workspace_id:
        type: integer
    type: object
  db.User:
    properties:
      accounts:
        items:
          $ref: '#/definitions/db.Account'
        type: array
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      enable:
        type: boolean
      firstname:
        type: string
      id:
        type: integer
      last_login_date:
        type: string
      lastname:
        type: string
      updated_at:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/db.WorkspaceMember'
        type: array
    type: object
  db.Workspace:
    properties:
      account_types:
        items:
          $ref: '#/definitions/db.AccountType'
        type: array
      accounts:
        items:
          $ref: '#/definitions/db.Account'
        type: array
      avatar:
        type: string
      categories:
        items:
          $ref: '#/definitions/db.Category'
        type: array
      created_at:
        type: string
      currencies:
        items:
          $ref: '#/definitions/db.Currency'
        type: array
      description:
        type: string
      id:
        type: integer
      invite_code:
        type: string
      members:
        items:
          $ref: '#/definitions/db.WorkspaceMember'
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/db.User'
      owner_id:
        type: integer
      places:
        items:
          $ref: '#/definitions/db.Place'
        type: array
      transactions:
        items:
          $ref: '#/definitions/db.Transaction'
        type: array
      updated_at:
        type: string
    type: object
  db.WorkspaceMember:
    properties:
      id:
        type: integer
      role:
        type: string
      user:
        $ref: '#/definitions/db.User'
      user_id:
        type: integer
      workspace:
        $ref: '#/definitions/db.Workspace'
      workspace_id:
        type: integer
    type: object
  structs.CursorResponse:
    properties:
      has_next:
        type: boolean
      items: {}
    type: object
  structs.PaginationResponse:
    properties:
      items: {}
      total:
        type: integer
    type: object
  structs.ResponseBody:
    properties:
      body: {}
      message:
        type: string
    type: object
  structs.Sorter:
    additionalProperties:
      type: string
    type: object
  structs.SuccessResponse:
    properties:
      success:
        type: boolean
    type: object
info:
  contact:
    email: vvrtsaix.n@gmail.com
    name: API Support
    url: https://www.facebook.com/uurtsaikh.n
  description: Sol backend api.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://uuree.fibo.cloud/
  title: Sol API
  version: "1.0"
paths:
  /admin/auth/info:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.Admin'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Admin: []
      summary: Info
      tags:
      - '[Admin] Auth'
  /admin/auth/init:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Init
      tags:
      - '[Admin] Auth'
  /admin/auth/login:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/admin.LoginInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/admin.LoginResult'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      summary: Login
      tags:
      - '[Admin] Auth'
  /admin/user/delete/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Admin: []
      summary: Delete user
      tags:
      - '[Admin] User'
  /admin/user/get/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Admin: []
      summary: Get user with ID
      tags:
      - '[Admin] User'
  /admin/user/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/admin.UserListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.User'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Admin: []
      summary: User list with pagination
      tags:
      - '[Admin] User'
  /admin/user/password/{id}:
    put:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/admin.UserPasswordInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Admin: []
      summary: Password change
      tags:
      - '[Admin] User'
  /admin/user/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.User'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Admin: []
      summary: User search with cursor pagination
      tags:
      - '[Admin] User'
  /admin/user/status/{id}:
    put:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/admin.UserStatusInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Admin: []
      summary: Status change
      tags:
      - '[Admin] User'
  /customer/account-type/create:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.AccountTypeCreateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Create account type
      tags:
      - '[Customer] Account type'
  /customer/account-type/delete/{id}:
    delete:
      parameters:
      - description: AccountType ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Delete account type
      tags:
      - '[Customer] Account type'
  /customer/account-type/get/{id}:
    get:
      parameters:
      - description: AccountType ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.AccountType'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Get account type with ID
      tags:
      - '[Customer] Account type'
  /customer/account-type/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/customer.AccountTypeListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.AccountType'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Account type list with pagination
      tags:
      - '[Customer] Account type'
  /customer/account-type/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.AccountType'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: AccountType search with cursor pagination
      tags:
      - '[Customer] Account type'
  /customer/account-type/update/{id}:
    put:
      parameters:
      - description: AccountType ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.AccountTypeUpdateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Update account type
      tags:
      - '[Customer] Account type'
  /customer/account/create:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.AccountCreateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Create account
      tags:
      - '[Customer] Account'
  /customer/account/delete/{id}:
    delete:
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Delete account
      tags:
      - '[Customer] Account'
  /customer/account/get/{id}:
    get:
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.Account'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Get account with ID
      tags:
      - '[Customer] Account'
  /customer/account/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/customer.AccountListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Account'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Account list with pagination
      tags:
      - '[Customer] Account'
  /customer/account/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Account'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Account search with cursor pagination
      tags:
      - '[Customer] Account'
  /customer/account/update/{id}:
    put:
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.AccountUpdateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Update account
      tags:
      - '[Customer] Account'
  /customer/auth/forgot/{email}:
    get:
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      summary: Forgot password
      tags:
      - '[Customer] Auth'
  /customer/auth/info:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Info
      tags:
      - '[Customer] Auth'
  /customer/auth/login:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.LoginInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/customer.LoginResult'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      summary: Login
      tags:
      - '[Customer] Auth'
  /customer/auth/password:
    put:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.UpdatePasswordParamInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Update password
      tags:
      - '[Customer] Auth'
  /customer/auth/profile:
    put:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.UpdateProfileInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Update profile
      tags:
      - '[Customer] Auth'
  /customer/auth/reset:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.ResetInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      summary: Reset
      tags:
      - '[Customer] Auth'
  /customer/auth/signup:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.SignupInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/customer.SignupResult'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      summary: SignUp
      tags:
      - '[Customer] Auth'
  /customer/category/create:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.CategoryCreateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Create category
      tags:
      - '[Customer] Category'
  /customer/category/delete/{id}:
    delete:
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Delete category
      tags:
      - '[Customer] Category'
  /customer/category/get/{id}:
    get:
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.Category'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Get category with ID
      tags:
      - '[Customer] Category'
  /customer/category/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/customer.CategoryListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Category'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Category list with pagination
      tags:
      - '[Customer] Category'
  /customer/category/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Category'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Category search with cursor pagination
      tags:
      - '[Customer] Category'
  /customer/category/update/{id}:
    put:
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.CategoryUpdateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Update category
      tags:
      - '[Customer] Category'
  /customer/currency/create:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.CurrencyCreateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Create currency
      tags:
      - '[Customer] Currency'
  /customer/currency/delete/{id}:
    delete:
      parameters:
      - description: Currency ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Delete currency
      tags:
      - '[Customer] Currency'
  /customer/currency/get/{id}:
    get:
      parameters:
      - description: Currency ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.Currency'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Get currency with ID
      tags:
      - '[Customer] Currency'
  /customer/currency/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/customer.CurrencyListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Currency'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Currency list with pagination
      tags:
      - '[Customer] Currency'
  /customer/currency/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Currency'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Currency search with cursor pagination
      tags:
      - '[Customer] Currency'
  /customer/currency/update/{id}:
    put:
      parameters:
      - description: Currency ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.CurrencyUpdateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Update currency
      tags:
      - '[Customer] Currency'
  /customer/file/presigned:
    put:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.FilePresignedInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/customer.FilePresignedResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Presigned file upload
      tags:
      - '[Customer] File'
  /customer/file/workspace/presigned:
    put:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.FileWorkspacePresignedInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/customer.FileWorkspacePresignedResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Workspace presigned file upload
      tags:
      - '[Customer] File'
  /customer/place/create:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.PlaceCreateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Create place
      tags:
      - '[Customer] Place'
  /customer/place/delete/{id}:
    delete:
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Delete place
      tags:
      - '[Customer] Place'
  /customer/place/get/{id}:
    get:
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.Place'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Get place with ID
      tags:
      - '[Customer] Place'
  /customer/place/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/customer.PlaceListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Place'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Place list with pagination
      tags:
      - '[Customer] Place'
  /customer/place/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Place'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Place search with cursor pagination
      tags:
      - '[Customer] Place'
  /customer/place/update/{id}:
    put:
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.PlaceUpdateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Update place
      tags:
      - '[Customer] Place'
  /customer/transaction/create:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          items:
            $ref: '#/definitions/customer.TransactionCreateInput'
          type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Create transaction
      tags:
      - '[Customer] Transaction'
  /customer/transaction/delete/{id}:
    delete:
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Delete transaction
      tags:
      - '[Customer] Transaction'
  /customer/transaction/get/{id}:
    get:
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.Transaction'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Get transaction with ID
      tags:
      - '[Customer] Transaction'
  /customer/transaction/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/customer.TransactionListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/customer.TransactionListRecord'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Transaction list with pagination
      tags:
      - '[Customer] Transaction'
  /customer/transaction/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Transaction'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Transaction search with cursor pagination
      tags:
      - '[Customer] Transaction'
  /customer/transaction/update/{id}:
    put:
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.TransactionUpdateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      - Workspace: []
      summary: Update transaction
      tags:
      - '[Customer] Transaction'
  /customer/workspace/create:
    post:
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.WorkspaceCreateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Create workspace
      tags:
      - '[Customer] Workspace'
  /customer/workspace/delete/{id}:
    delete:
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Delete workspace
      tags:
      - '[Customer] Workspace'
  /customer/workspace/get/{id}:
    get:
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/db.Workspace'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Get workspace with ID
      tags:
      - '[Customer] Workspace'
  /customer/workspace/invite/{id}:
    get:
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Regenerate invite code
      tags:
      - '[Customer] Workspace'
  /customer/workspace/join/{code}:
    get:
      parameters:
      - description: Invite code
        in: path
        name: code
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Join with invite code
      tags:
      - '[Customer] Workspace'
  /customer/workspace/list:
    post:
      parameters:
      - description: Filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/customer.WorkspaceListInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.PaginationResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Workspace'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Workspace list with pagination
      tags:
      - '[Customer] Workspace'
  /customer/workspace/role/{id}:
    put:
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.WorkspaceRoleInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Change workspace member role
      tags:
      - '[Customer] Workspace'
  /customer/workspace/search:
    get:
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: previous_id
        type: integer
      - in: query
        name: query
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  allOf:
                  - $ref: '#/definitions/structs.CursorResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/db.Workspace'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Workspace search with cursor pagination
      tags:
      - '[Customer] Workspace'
  /customer/workspace/update/{id}:
    put:
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: integer
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.WorkspaceUpdateInput'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  $ref: '#/definitions/structs.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseBody'
            - properties:
                body:
                  type: object
              type: object
      security:
      - Customer: []
      summary: Update workspace
      tags:
      - '[Customer] Workspace'
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  Admin:
    in: header
    name: Authorization
    type: apiKey
  Customer:
    in: header
    name: Authorization
    type: apiKey
  Workspace:
    in: header
    name: Workspace
    type: apiKey
swagger: "2.0"
